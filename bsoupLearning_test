# WEBSCRAPING COM PYTHON
# Atualizando o script

# Um breve exercicio de raspagem de dados na web com Python.
# O programa realiza uma requisicao ao endereco da pagina Hot 100 Billboard,
# coleta os dados e imprime uma lista em terminal com:
# nome do artista, titulo da faixa e sua posicao na lista.

# BIBLIOTECAS UTILIZADAS (necessaria a instalacao delas)
# REQUESTS: http://docs.python-requests.org/en/latest/
# BEAUTIFUL SOUP: www.crummy.com/software/BeautifulSoup/

# AUTOR:
# YURI ALEXSANDER
# https://github.com/yurialeksndr

###

# IMPORTANDO BIBLIOTECAS
import requests
import bs4

# DECLARANDO VARIAVEIS (NAO SERAO UTILIZADAS CLASSES)
b_titulo = []
b_artista = []
titulos = []
artistas = []

# REQUISICAO : HOT 100 BILLBOARD
response = requests.get("https://www.billboard.com/charts/hot-100")

# CASO A REQUISICAO TENHA SUCESSO
if response.status_code == 200:

    # UTILIZANDO A BIBLIOTECA BEAUTIFUL SOUP PARA ACESSAR O CONTEUDO DA REQUISICAO
    bsoup = bs4.BeautifulSoup(response.content, "html.parser")

    # SEPARANDO CADA LINHA INTEIRA EM UM ARRAY
    charts = bsoup.findAll("div", attrs={"class": "chart-list-item__text"})

    # PARA CADA ITEM DO ARRAY, SALVAR TITULO DA FAIXA E ARTISTA NOS RESPECTIVOS ARRAYS
    for row in charts:
        #
        # AS CHAMADAS DO METODO "REPLACE" RETIRAM OS ESPACAMENTOS E QUEBRAS DE LINHA DO TEXTO ORIGINAL DO SITE

       # if row.find("a", string=True) == None:
       #     b_artista.append(str(row.find("div", attrs={"class":"chart-list-item__artist"})).replace("\t","").replace("\n", "").replace("&amp;","&"))

       # else:
       #     b_artista.append(str(row.find("a", href=True)).replace("\t", "").replace("\n", ""))
        b_artista.append(str(row.find("div", attrs={"class": "chart-list-item__artist"})).replace("\t", "").replace("\n","").replace("&amp;", "&"))
        b_titulo.append(str(row.find("span", attrs={"class":"chart-list-item__title-text"})).replace("\t","").replace("\n",""))



    for ttl in b_titulo:
        titulos.append(ttl[ttl.find(">")+1:ttl.rfind("<")])

    for arts in b_artista:
        artistas.append(arts[arts.find(">")+1:arts.rfind("<")])

    for x in range (0,100):
        print("{}. {} - {}".format(x+1,artistas[x],titulos[x]))


else:
    print("A requisicao falhou!")

